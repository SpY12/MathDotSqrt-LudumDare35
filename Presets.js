var presets = [
	[FLOOR(0),
		SPIKE_CEILING_FLOOR(0, 1),
		FLOOR(0),
		FLOOR(0),
		FLOOR(0),
		FLOOR(0),
		SPIKE_FLOOR(0),
		FLOOR(0),
		FLOOR(0),
		HOLE(),
		FLOOR(2),
		FLOOR(0),
		FLOOR_CEILING(0, 1),
		FLOOR(-1),
		FLOOR(-1),
		FLOOR(-1),
		LASER_FLOOR(-1, 3),
		FLOOR_CEILING(-1, 3),
		FLOOR_CEILING(-1, 2.5),
		FLOOR_CEILING(-1, 2),
		FLOOR(0)],
	[FLOOR(0),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		LASER_FLOOR(.5, 2),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		LASER_FLOOR(.5, 2),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		LASER_FLOOR(.5, 2),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		LASER_FLOOR(.5, 2),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		FLOOR_CEILING(0, 3),
		LASER_FLOOR(.5, 2),
		FLOOR(0)],
	[FLOOR(0),
		SPIKE_CEILING_FLOOR(0, 5),
		SPIKE_CEILING_FLOOR(0, 4.9),
		SPIKE_CEILING_FLOOR(0, 4.8),
		SPIKE_CEILING_FLOOR(0, 4.7),
		SPIKE_CEILING_FLOOR(0, 4.6),
		SPIKE_CEILING_FLOOR(0, 4.5),
		SPIKE_CEILING_FLOOR(0, 4.4),
		SPIKE_CEILING_FLOOR(0, 4.3),
		SPIKE_CEILING_FLOOR(0, 4.2),
		SPIKE_CEILING_FLOOR(0, 4.1),
		SPIKE_CEILING_FLOOR(0, 4),
		SPIKE_CEILING_FLOOR(0, 3.9),
		SPIKE_CEILING_FLOOR(0, 3.8),
		SPIKE_CEILING_FLOOR(0, 3.7),
		SPIKE_CEILING_FLOOR(0, 3.6),
		SPIKE_CEILING_FLOOR(0, 3.5),
		SPIKE_CEILING_FLOOR(0, 3.4),
		SPIKE_CEILING_FLOOR(0, 3.3),
		SPIKE_CEILING_FLOOR(0, 3.2),
		SPIKE_CEILING_FLOOR(0, 3.1),
		SPIKE_CEILING_FLOOR(0, 3),
		SPIKE_CEILING_FLOOR(0, 2.9),
		SPIKE_CEILING_FLOOR(0, 2.8),
		SPIKE_CEILING_FLOOR(0, 2.7),
		SPIKE_CEILING_FLOOR(0, 2.6),
		SPIKE_CEILING_FLOOR(0, 2.5),
		SPIKE_CEILING_FLOOR(0, 2.4),
		SPIKE_CEILING_FLOOR(0, 2.3),
		SPIKE_CEILING_FLOOR(0, 2.2),
		SPIKE_CEILING_FLOOR(0, 2.1),
		SPIKE_CEILING_FLOOR(0, 2),
		SPIKE_CEILING_FLOOR(0, 1.9),
		SPIKE_CEILING_FLOOR(0, 1.8),
		SPIKE_CEILING_FLOOR(0, 1.7),
		SPIKE_CEILING_FLOOR(0, 1.6),
		SPIKE_CEILING_FLOOR(0, 1.5),
		SPIKE_CEILING_FLOOR(0, 1.4),
		SPIKE_CEILING_FLOOR(0, 1.3),
		SPIKE_CEILING_FLOOR(0, 1.2),
		SPIKE_CEILING_FLOOR(0, 1.1),
		SPIKE_CEILING_FLOOR(0, 1),
		SPIKE_CEILING_FLOOR(0, 1),
		SPIKE_CEILING_FLOOR(0, 1),
		SPIKE_CEILING_FLOOR(0, 1),
		FLOOR(0)],
	[FLOOR(0),
		FLOOR(0),
		FLOOR(0),
		HOLE(),
		LASER_FLOOR(-1, 4),
		FLOOR(-1),
		FLOOR(-1),
		SPIKE_FLOOR_CEILING(-.5),
		FLOOR(0),
		FLOOR(0)],
	[FLOOR(0),
		FLOOR(0),
		FLOOR(0),
		HOLE(),
		FLOOR_CEILING(1, 1),
		FLOOR(0),
		FLOOR(0),
		HOLE(),
		SPIKE_FLOOR(0),
		FLOOR(0),
		FLOOR(0),
		HOLE(),
		FLOOR(0),
		FLOOR(0),
		FLOOR(0)],
	[FLOOR(0),
		SPIKE_FLOOR(0),
		SPIKE_FLOOR(-1),
		FLOOR(0)],
	[FLOOR(0),
		SPIKE_FLOOR(1),
		SPIKE_FLOOR(-2),
		FLOOR(-1),
		FLOOR(-1),
		FLOOR_CEILING(-1, 2),
		FLOOR_CEILING(-1, 2),
		FLOOR_CEILING(-1, 2),
		FLOOR_CEILING(-1, 2),
		SPIKE_CEILING_FLOOR(-1, 2),
		FLOOR(-1),
		FLOOR(1),
		HOLE(),
		FLOOR(-1),
		FLOOR(-1),
		FLOOR(0)],
	[FLOOR(0),
		FLOOR(.5),
		FLOOR(1),
		FLOOR(1.5),
		FLOOR(2),
		FLOOR(2.5),
		FLOOR(3),
		HOLE(),
		SPIKE_FLOOR(0),
		FLOOR(0),
		FLOOR(0)],
	[FLOOR(0),
		FLOOR(0),
		HOLE(),
		FLOOR_CEILING(1, 1),
		HOLE(),
		FLOOR(0),
		FLOOR_CEILING(1, 1),
		HOLE(),
		FLOOR(0),
		FLOOR(0)],
	[],
	[],
	[],
	[],
	[],
	[]
];

function getRandomPreset(lastHeight){
	index = randomInt(0, presets.length - 1);
	for(var i = 0; i < presets[index].length; i++){
		levelQueue.data.push(presets[index][i]);
	}
}